/*
 * Copyright (C) 2013 Ryuan Choi
 *
 * License LGPL-3, see COPYING file at project folder.
 */

#define ASPECT_FILL(_ASPECT) \
       aspect: _ASPECT _ASPECT; aspect_preference: NONE;
#define TILED_PATTERN(_WIDTH, _HEIGHT) \
       fill { size { relative: 0.0 0.0; offset: _WIDTH _HEIGHT; } }
#define TILED_HORIZ(_WIDTH) \
       fill { size { relative: 0.0 1.0; offset: _WIDTH 0; } }
#define FIXED_SIZE(_WIDTH, _HEIGHT) \
       min: _WIDTH _HEIGHT; max: _WIDTH _HEIGHT; fixed: 1 1;

group { name: "scrollbar.vertical";
   min: 0 0;
   images.image: "inset_shadow.png" COMP;
   images.image: "bevel_out.png" COMP;
   images.image: "runner_vert.png" COMP;
   images.image: "runner_glow_vert.png" COMP;
   images.image: "holes_tiny_vert.png" COMP;
   images.image: "holes_tiny_glow_vert.png" COMP;
   images.image: "vgrad_med_lighter.png" COMP;
   images.image: "shadow_square_tiny.png" COMP;
   images.image: "glow_small.png" COMP;
   images.image: "sym_up_light_normal.png" COMP;
   images.image: "sym_down_light_normal.png" COMP;
   images.image: "sym_up_glow_normal.png" COMP;
   images.image: "sym_down_glow_normal.png" COMP;

   script {
      public message(Msg_Type:type, id, ...) {
         if ((id == 0) && (type == MSG_FLOAT_SET)) {
            new Float:vy, Float:sy;

            vy = getfarg(2);
            sy = getfarg(3);

            if (vy >= 0.0) {
               set_drag_size(PART:"elm.dragable.vbar", 1.0, sy);
               set_drag(PART:"elm.dragable.vbar", 0.0, vy);
            }
         }
      }

      public update_drag_pos() {
         new Float:x, Float:y;
         get_drag(PART:"elm.dragable.vbar", x, y);
         send_message(MSG_FLOAT, 1, y);
      }
   }

   parts {
      part { name: "rect.base"; type: RECT;
         description {
            min: 15 0;
            max: 15 999999;
            align: 1.0 0.5;
            state: "default" 0.0;
            color: 100 100 100 255;
         }
      }
      /**** copied from elementary ****/
      part { name: "sb_vbar_show"; type: RECT;
         scale: 1;
         repeat_events: 0;
         description { state: "default" 0.0;
            min: 15 0;
            max: 15 999999;
            align: 1.0 0.5;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "runner_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            image.normal: "runner_vert.png";
            image.border: 0 0 2 2;
            rel1.to: "sb_vbar_base";
            rel2.to: "sb_vbar_base";
            fill.smooth: 0;
            min: 3 4;
            max: 3 99999;
         }
      }
      part { name: "runner_vbar_clip"; type: RECT;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            min: 1 1;
            max: 1 99999;
            rel1.to: "runner_vbar";
            rel1.offset: 0 1;
            rel2.to: "runner_vbar";
            rel2.offset: -1 -2;
         }
      }
      part { name: "sb_vbar"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 15 15;
            align: 1.0 0.0;
            color: 255 0 0 222;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 99999;
         }
      }
      part { name: "sb_vbar_base"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "sb_vbar_a1";
            rel2.relative: 1.0 0.0;
            rel2.to: "sb_vbar_a2";
         }
      }
      part { name: "sb_vbar_p1"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "sb_vbar_a1";
            rel2.relative: 1.0 0.0;
            rel2.to: "elm.dragable.vbar";
         }
      }
      part { name: "sb_vbar_p2"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 0.0;
            rel2.to: "sb_vbar_a2";
         }
      }
      part { name: "elm.dragable.vbar"; type: RECT;
         clip_to: "sb_vbar";
         scale: 1;
         dragable.x: 0 0 0;
         dragable.y: 1 1 0;
         dragable.confine: "sb_vbar_base";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_vbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_vbar_base";
            color: 0 0 0 0;
         }
      }
      part { name: "sb_vbar_a1"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 0.5 0.0;
            aspect: 1.0 1.0; aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1.to: "sb_vbar";
            rel2.to: "sb_vbar";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 0;
         }
      }
      part { name: "sb_vbar_a2"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 0.5 1.0;
            aspect: 1.0 1.0; aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1.to: "sb_vbar";
            rel1.offset: 0 -1;
            rel1.relative: 0.0 1.0;
            rel2.to: "sb_vbar";
         }
      }

      part { name: "arrow1_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a1";
            rel2.to: "sb_vbar_a1";
            image.normal: "sym_up_light_normal.png";
            FIXED_SIZE(15, 15)
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_up_glow_normal.png";
         }
      }
      part { name: "arrow2_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a2";
            rel2.to: "sb_vbar_a2";
            image.normal: "sym_down_light_normal.png";
            FIXED_SIZE(15, 15)
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_down_glow_normal.png";
         }
      }
      part { name: "shadow_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.offset: -3 -2;
            rel1.to: "base_vbar";
            rel2.offset: 2 4;
            rel2.to: "base_vbar";
            image.normal: "shadow_square_tiny.png";
            image.border: 6 6 6 6;
            fill.smooth: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            rel1.offset: -2 -2;
            rel2.offset: 1 1;
            color: 255 255 255 128;
         }
      }
      part { name: "glow_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.offset: -3 -3;
            rel1.to: "base_vbar";
            rel2.offset: 2 2;
            rel2.to: "base_vbar";
            image.normal: "glow_small.png";
            image.border: 7 7 7 7;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "runner_glow_vbar"; mouse_events: 0;
         clip_to: "runner_vbar_clip";
         description { state: "default" 0.0;
            rel1.offset: 0 -30;
            rel1.to_x: "runner_vbar_clip";
            rel1.to_y: "base_vbar";
            rel2.offset: -1 29;
            rel2.to_x: "runner_vbar_clip";
            rel2.to_y: "base_vbar";
            image.normal: "runner_glow_vert.png";
            image.border: 0 0 33 33;
         }
      }
      part { name: "base_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.offset: 2 0;
            rel1.to: "elm.dragable.vbar";
            rel2.offset: -3 -1;
            rel2.to: "elm.dragable.vbar";
            image.normal: "vgrad_med_lighter.png";
            fill.smooth: 0;
            min: 3 13;
            TILED_HORIZ(120)
         }
      }
      part { name: "bevel_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_vbar";
            rel2.to: "base_vbar";
            image.normal: "bevel_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            fill.smooth: 0;
            min: 3 3;
         }
      }
      part { name: "center_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_vbar";
            rel2.to: "base_vbar";
            image.normal: "holes_tiny_vert.png";
            FIXED_SIZE(3, 11)
         }
      }
      part { name: "center_glow_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "center_vbar";
            rel2.to: "center_vbar";
            image.normal: "holes_tiny_glow_vert.png";
            FIXED_SIZE(11, 17)
            visible: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      program {
         signal: "elm,action,show,vbar"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         signal: "elm,action,hide,vbar"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a1";
         action: STATE_SET "clicked" 0.0;
         target: "sb_vbar_a1";
         target: "arrow1_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a1";
         action: DRAG_VAL_STEP 0.0 -1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_vbar_a1";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar_a1";
         target: "arrow1_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a2";
         action: STATE_SET "clicked" 0.0;
         target: "sb_vbar_a2";
         target: "arrow2_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a2";
         action: DRAG_VAL_STEP 0.0 1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_vbar_a2";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar_a2";
         target: "arrow2_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p1";
         action: DRAG_VAL_PAGE 0.0 -1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p2";
         action: DRAG_VAL_PAGE  0.0 1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.vbar";
         action: STATE_SET "clicked" 0.0;
         target: "elm.dragable.vbar";
         target: "shadow_vbar";
         target: "glow_vbar";
         target: "center_glow_vbar";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.vbar";
         action: STATE_SET "default" 0.0;
         target: "elm.dragable.vbar";
         target: "shadow_vbar";
         target: "glow_vbar";
         target: "center_glow_vbar";
      }
      program { /* the programs that webkit uses */
         name: "dragged";
         signal: "drag";
         source: "elm.dragable.vbar";
         script {
            update_drag_pos();
         }
      }
   }
}

group { name: "scrollbar.horizontal";
   min: 0 0;
   images.image: "inset_shadow.png" COMP;
   images.image: "bevel_in.png" COMP;
   images.image: "bevel_out.png" COMP;
   images.image: "runner_horiz.png" COMP;
   images.image: "runner_glow_horiz.png" COMP;
   images.image: "holes_tiny_horiz.png" COMP;
   images.image: "holes_tiny_glow_horiz.png" COMP;
   images.image: "vgrad_med_lighter.png" COMP;
   images.image: "shadow_square_tiny.png" COMP;
   images.image: "glow_small.png" COMP;
   images.image: "sym_left_light_normal.png" COMP;
   images.image: "sym_right_light_normal.png" COMP;
   images.image: "sym_left_glow_normal.png" COMP;
   images.image: "sym_right_glow_normal.png" COMP;

   script {
      public message(Msg_Type:type, id, ...) {
         if ((id == 0) && (type == MSG_FLOAT_SET)) {
            new Float:vx, Float:sx;

            vx = getfarg(2);
            sx = getfarg(3);

            if (vx >= 0.0) {
               set_drag_size(PART:"elm.dragable.hbar", sx, 1.0);
               set_drag(PART:"elm.dragable.hbar", vx, 0.0);
            }
         }
      }

      public update_drag_pos() {
         new Float:x, Float:y;
         get_drag(PART:"elm.dragable.hbar", x, y);
         send_message(MSG_FLOAT, 1, x);
      }
   }

   parts {
      part { name: "rect.base"; type: RECT;
         description {
            min: 0 15;
            max: 999999 15;
            align: 0.5 1.0;
            state: "default" 0.0;
            color: 100 100 100 255;
         }
      }
      part { name: "sb_hbar_show"; type: RECT;
         scale: 1;
         repeat_events: 0;
         description { state: "default" 0.0;
            min: 0 15;
            max: 999999 15;
            align: 0.5 1.0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_hbar"; type: RECT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 15 15;
            align: 0.0 1.0;
            rel1.relative: 0.0 1.0;
            rel1.offset: 0 -1;
            rel2.relative: 1.0 1.0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 99999 0;
         }
      }
      part { name: "sb_hbar_base"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.relative: 0.0 1.0;
            rel2.to: "sb_hbar_a2";
         }
      }
      part { name: "sb_hbar_p1"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.relative: 0.0 1.0;
            rel2.to: "elm.dragable.hbar";
         }
      }
      part { name: "sb_hbar_p2"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 0.0 1.0;
            rel2.to: "sb_hbar_a2";
         }
      }
      part { name: "elm.dragable.hbar"; type: RECT;
         clip_to: "sb_hbar";
         scale: 1;
         dragable.x: 1 1 0;
         dragable.y: 0 0 0;
         dragable.confine: "sb_hbar_base";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_hbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_hbar_base";
            color: 0 0 0 0;
         }
      }
      part { name: "sb_hbar_a1"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1.to: "sb_hbar";
            rel2.to: "sb_hbar";
            rel2.relative: 0.0 1.0;
            rel2.offset: 0 -1;
         }
      }
      part { name: "sb_hbar_a2"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1.to: "sb_hbar";
            rel1.offset: -1 0;
            rel1.relative: 1.0 0.0;
            rel2.to: "sb_hbar";
         }
      }
      part { name: "runner_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            image.normal: "runner_horiz.png";
            image.border: 2 2 0 0;
            rel1.to: "sb_hbar_base";
            rel2.to: "sb_hbar_base";
            fill.smooth: 0;
            min: 4 3;
            max: 99999 3;
         }
      }
      part { name: "runner_hbar_clip"; type: RECT;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            min: 1 1;
            max: 99999 1;
            rel1.to: "runner_hbar";
            rel1.offset: 1 0;
            rel2.to: "runner_hbar";
            rel2.offset: -2 -1;
         }
      }
      part { name: "arrow1_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.to: "sb_hbar_a1";
            image.normal: "sym_left_light_normal.png";
            FIXED_SIZE(15, 15)
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_left_glow_normal.png";
         }
      }
      part { name: "arrow2_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a2";
            rel2.to: "sb_hbar_a2";
            image.normal: "sym_right_light_normal.png";
            FIXED_SIZE(15, 15)
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_right_glow_normal.png";
         }
      }
      part { name: "shadow_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.offset: -3 -2;
            rel1.to: "base_hbar";
            rel2.offset: 2 4;
            rel2.to: "base_hbar";
            image.normal: "shadow_square_tiny.png";
            image.border: 6 6 6 6;
            fill.smooth: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            rel1.offset: -2 -2;
            rel2.offset: 1 1;
            color: 255 255 255 128;
         }
      }
      part { name: "glow_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.offset: -3 -3;
            rel1.to: "base_hbar";
            rel2.offset: 2 2;
            rel2.to: "base_hbar";
            image.normal: "glow_small.png";
            image.border: 7 7 7 7;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "runner_glow_hbar"; mouse_events: 0;
         clip_to: "runner_hbar_clip";
         description { state: "default" 0.0;
            rel1.offset: -30 0;
            rel1.to_x: "base_hbar";
            rel1.to_y: "runner_hbar_clip";
            rel2.offset: 29 -1;
            rel2.to_x: "base_hbar";
            rel2.to_y: "runner_hbar_clip";
            image.normal: "runner_glow_horiz.png";
            image.border: 33 33 0 0;
         }
      }
      part { name: "base_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.offset: 0 2;
            rel1.to: "elm.dragable.hbar";
            rel2.offset: -1 -3;
            rel2.to: "elm.dragable.hbar";
            image.normal: "vgrad_med_lighter.png";
            fill.smooth: 0;
            min: 13 3;
            TILED_HORIZ(120)
         }
      }
      part { name: "bevel_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_hbar";
            rel2.to: "base_hbar";
            image.normal: "bevel_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            fill.smooth: 0;
            min: 3 3;
         }
      }
      part { name: "center_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_hbar";
            rel2.to: "base_hbar";
            image.normal: "holes_tiny_horiz.png";
            FIXED_SIZE(11, 3)
         }
      }
      part { name: "center_glow_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "center_hbar";
            rel2.to: "center_hbar";
            image.normal: "holes_tiny_glow_horiz.png";
            FIXED_SIZE(17, 11)
            visible: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      program {
         signal: "elm,action,show,hbar"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         signal: "elm,action,hide,hbar"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a1";
         action: STATE_SET "clicked" 0.0;
         target: "sb_hbar_a1";
         target: "arrow1_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a1";
         action: DRAG_VAL_STEP -1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_hbar_a1";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar_a1";
         target: "arrow1_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a2";
         action: STATE_SET "clicked" 0.0;
         target: "sb_hbar_a2";
         target: "arrow2_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a2";
         action: DRAG_VAL_STEP 1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_hbar_a2";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar_a2";
         target: "arrow2_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p1";
         action: DRAG_VAL_PAGE -1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p2";
         action: DRAG_VAL_PAGE  1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.hbar";
         action: STATE_SET "clicked" 0.0;
         target: "elm.dragable.hbar";
         target: "shadow_hbar";
         target: "glow_hbar";
         target: "center_glow_hbar";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.hbar";
         action: STATE_SET "default" 0.0;
         target: "elm.dragable.hbar";
         target: "shadow_hbar";
         target: "glow_hbar";
         target: "center_glow_hbar";
      }
      program { /* the programs that webkit uses */
         name: "dragged";
         signal: "drag";
         source: "elm.dragable.vbar";
         script {
            update_drag_pos();
         }
      }
   }
}
